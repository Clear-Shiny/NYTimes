{"mappings":"ACAA,MAAM,EAAS,mCAEf,IAAI,EAAe,EACf,EAAoB,EAExB,eAAe,EAAa,CAAG,EAC7B,GAAI,CAUF,GATA,IACA,IAEI,EAAe,IACjB,QAAQ,IAAI,CAAC,sEACb,MAAM,IAAI,QAAQ,AAAA,GAAW,WAAW,EAAS,OACjD,EAAe,GAGb,EAAoB,IAEtB,OADA,QAAQ,KAAK,CAAC,6EACP,KAGT,IAAM,EAAW,MAAM,MAAM,GAC7B,GAAI,CAAC,EAAS,EAAE,CAAE,CAChB,GAAI,AAAoB,MAApB,EAAS,MAAM,CAGjB,OAFA,QAAQ,KAAK,CAAC,kDACd,MAAM,IAAI,QAAQ,AAAA,GAAW,WAAW,EAAS,OAC1C,EAAa,EAEpB,OAAM,AAAI,MAAM,CAAC,oBAAoB,EAAE,EAAS,MAAM,CAAC,CAAC,CAE5D,CAEA,OADa,MAAM,EAAS,IAAI,EAElC,CAAE,MAAO,EAAO,CACd,QAAQ,KAAK,CAAC,eAAgB,EAChC,CACF,CAEA,SAAS,EAAmB,CAAK,EAC/B,IAAM,EAAW,SAAS,aAAa,CAAC,OAMxC,OALA,EAAS,SAAS,CAAC,GAAG,CAAC,SACvB,EAAS,SAAS,CAAG,CAAC;WACb,EAAE,EAAM,QAAQ,CAAC;iBACX,EAAE,EAAM,OAAO,CAAC;IAC7B,CAAC,CACI,CACT,CAqBA,eAAe,IACb,IAAM,EAAsB,SAAS,aAAa,CAAC,4BAC7C,EAAS,CAAC,6DAA6D,EAAE,EAAO,CAAC,CAEvF,AADa,CAAA,MAAM,EAAa,EAAhC,EACK,OAAO,CAAC,OAAO,CAAC,AAAA,IACnB,EAAoB,WAAW,CAAC,EAAmB,GACrD,EACF,CAEA,AAlBA,CAAA,iBACE,IAAM,EAAsB,SAAS,aAAa,CAAC,8BAC7C,EAAS,CAAC,+DAA+D,EAAE,EAAO,CAAC,CAEzF,AADa,CAAA,MAAM,EAAa,EAAhC,EACK,OAAO,CAAC,OAAO,CAAC,AAAA,IACnB,EAAoB,WAAW,CAAC,EAAmB,GACrD,EACF,CAAA,IAYA","sources":["<anon>","src/script2.js"],"sourcesContent":["const apiKey = \"rq9GEdTPnGCkQGXgy4nmX3GR0VQaGjmx\";\nlet requestCount = 0; // Track the number of requests made\nlet dailyRequestCount = 0; // Track the number of requests made today\nasync function fetchNYTData(url) {\n    try {\n        requestCount++;\n        dailyRequestCount++;\n        if (requestCount > 5) {\n            console.warn(\"Rate limit (5 requests per minute) exceeded. Waiting 12 seconds...\");\n            await new Promise((resolve)=>setTimeout(resolve, 12000)); // Wait for 12 seconds\n            requestCount = 0; // Reset the count after waiting\n        }\n        if (dailyRequestCount > 500) {\n            console.error(\"Daily rate limit (500 requests per day) exceeded. Please try again later.\");\n            return null; // Or handle the error differently\n        }\n        const response = await fetch(url);\n        if (!response.ok) {\n            if (response.status === 429) {\n                console.error(\"Rate limit exceeded. Retrying in 12 seconds...\");\n                await new Promise((resolve)=>setTimeout(resolve, 12000)); // Wait for 12 seconds\n                return fetchNYTData(url); // Retry the request\n            } else throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        return data;\n    } catch (error) {\n        console.error(\"Fetch error:\", error);\n    }\n}\nfunction createStoryElement(story) {\n    const storyDiv = document.createElement(\"div\");\n    storyDiv.classList.add(\"story\");\n    storyDiv.innerHTML = `\r\n        <p>${story.abstract}</p>\r\n        <a href=\"${story.web_url}\" target=\"_blank\">Read More</a>\r\n    `;\n    return storyDiv;\n}\nfunction createSectionElement(section) {\n    const sectionDiv = document.createElement(\"div\");\n    sectionDiv.classList.add(\"section\");\n    sectionDiv.innerHTML = `\r\n        <h3>${section.name}</h3>\r\n        <p>${section.description}</p>\r\n    `;\n    return sectionDiv;\n}\nasync function loadTopStoriesScience() {\n    const topStoriesContainer = document.querySelector(\".science-stories-container\");\n    const apiUrl = `https://api.nytimes.com/svc/topstories/v2/science.json?api-key=${apiKey}`;\n    const data = await fetchNYTData(apiUrl);\n    data.results.forEach((story)=>{\n        topStoriesContainer.appendChild(createStoryElement(story));\n    });\n}\nasync function loadTopStoriesWorld() {\n    const topStoriesContainer = document.querySelector(\".world-stories-container\");\n    const apiUrl = `https://api.nytimes.com/svc/topstories/v2/world.json?api-key=${apiKey}`;\n    const data = await fetchNYTData(apiUrl);\n    data.results.forEach((story)=>{\n        topStoriesContainer.appendChild(createStoryElement(story));\n    });\n}\nloadTopStoriesScience();\nloadTopStoriesWorld();\n\n//# sourceMappingURL=index.9797a50a.js.map\n","const apiKey = \"rq9GEdTPnGCkQGXgy4nmX3GR0VQaGjmx\";\r\n\r\nlet requestCount = 0; // Track the number of requests made\r\nlet dailyRequestCount = 0; // Track the number of requests made today\r\n\r\nasync function fetchNYTData(url) {\r\n  try {\r\n    requestCount++;\r\n    dailyRequestCount++;\r\n\r\n    if (requestCount > 5) {\r\n      console.warn(\"Rate limit (5 requests per minute) exceeded. Waiting 12 seconds...\");\r\n      await new Promise(resolve => setTimeout(resolve, 12000)); // Wait for 12 seconds\r\n      requestCount = 0; // Reset the count after waiting\r\n    }\r\n\r\n    if (dailyRequestCount > 500) {\r\n      console.error(\"Daily rate limit (500 requests per day) exceeded. Please try again later.\");\r\n      return null; // Or handle the error differently\r\n    }\r\n\r\n    const response = await fetch(url);\r\n    if (!response.ok) {\r\n      if (response.status === 429) { // Example: Assuming 429 is the rate limit error code\r\n        console.error(\"Rate limit exceeded. Retrying in 12 seconds...\");\r\n        await new Promise(resolve => setTimeout(resolve, 12000)); // Wait for 12 seconds\r\n        return fetchNYTData(url); // Retry the request\r\n      } else {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n    }\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Fetch error:\", error);\r\n  }\r\n}\r\n\r\nfunction createStoryElement(story) {\r\n  const storyDiv = document.createElement('div');\r\n  storyDiv.classList.add('story');\r\n  storyDiv.innerHTML = `\r\n        <p>${story.abstract}</p>\r\n        <a href=\"${story.web_url}\" target=\"_blank\">Read More</a>\r\n    `;\r\n  return storyDiv;\r\n}\r\n\r\nfunction createSectionElement(section) {\r\n  const sectionDiv = document.createElement('div');\r\n  sectionDiv.classList.add('section');\r\n  sectionDiv.innerHTML = `\r\n        <h3>${section.name}</h3>\r\n        <p>${section.description}</p>\r\n    `;\r\n  return sectionDiv;\r\n}\r\n\r\nasync function loadTopStoriesScience() {\r\n  const topStoriesContainer = document.querySelector('.science-stories-container');\r\n  const apiUrl = `https://api.nytimes.com/svc/topstories/v2/science.json?api-key=${apiKey}`;\r\n  const data = await fetchNYTData(apiUrl);\r\n  data.results.forEach(story => {\r\n    topStoriesContainer.appendChild(createStoryElement(story));\r\n  });\r\n}\r\n\r\nasync function loadTopStoriesWorld() {\r\n  const topStoriesContainer = document.querySelector('.world-stories-container');\r\n  const apiUrl = `https://api.nytimes.com/svc/topstories/v2/world.json?api-key=${apiKey}`;\r\n  const data = await fetchNYTData(apiUrl);\r\n  data.results.forEach(story => {\r\n    topStoriesContainer.appendChild(createStoryElement(story));\r\n  });\r\n}\r\n\r\nloadTopStoriesScience();\r\nloadTopStoriesWorld();\r\n"],"names":["apiKey","requestCount","dailyRequestCount","fetchNYTData","url","console","warn","Promise","resolve","setTimeout","error","response","fetch","ok","status","Error","json","createStoryElement","story","storyDiv","document","createElement","classList","add","innerHTML","abstract","web_url","loadTopStoriesWorld","topStoriesContainer","querySelector","apiUrl","data","results","forEach","appendChild","loadTopStoriesScience"],"version":3,"file":"index.9797a50a.js.map"}